{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport json2mq from 'json2mq';\n\nvar MediaQueryListener =\n/*#__PURE__*/\nfunction () {\n  function MediaQueryListener(targetWindow, query, listener) {\n    var _this = this;\n\n    this.nativeMediaQueryList = targetWindow.matchMedia(query);\n    this.active = true; // Safari doesn't clear up listener with removeListener\n    // when the listener is already waiting in the event queue.\n    // Having an active flag to make sure the listener is not called\n    // after we removeListener.\n\n    this.cancellableListener = function () {\n      _this.matches = _this.nativeMediaQueryList.matches;\n\n      if (_this.active) {\n        listener.apply(void 0, arguments);\n      }\n    };\n\n    this.nativeMediaQueryList.addListener(this.cancellableListener);\n    this.matches = this.nativeMediaQueryList.matches;\n  }\n\n  var _proto = MediaQueryListener.prototype;\n\n  _proto.cancel = function cancel() {\n    this.active = false;\n    this.nativeMediaQueryList.removeListener(this.cancellableListener);\n  };\n\n  return MediaQueryListener;\n}();\n\nvar checkInvariants = function checkInvariants(_ref) {\n  var query = _ref.query,\n      queries = _ref.queries,\n      defaultMatches = _ref.defaultMatches;\n  !(!(!query && !queries) || query && queries) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '<Media> must be supplied with either \"query\" or \"queries\"') : invariant(false) : void 0;\n  !(defaultMatches === undefined || !query || typeof defaultMatches === \"boolean\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when query is set, defaultMatches must be a boolean, received \" + typeof defaultMatches) : invariant(false) : void 0;\n  !(defaultMatches === undefined || !queries || typeof defaultMatches === \"object\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when queries is set, defaultMatches must be a object of booleans, received \" + typeof defaultMatches) : invariant(false) : void 0;\n};\n/**\n * Wraps a single query in an object. This is used to provide backward compatibility with\n * the old `query` prop (as opposed to `queries`). If only a single query is passed, the object\n * will be unpacked down the line, but this allows our internals to assume an object of queries\n * at all times.\n */\n\n\nvar wrapInQueryObject = function wrapInQueryObject(query) {\n  return {\n    __DEFAULT__: query\n  };\n};\n/**\n * Unwraps an object of queries, if it was originally passed as a single query.\n */\n\n\nvar unwrapSingleQuery = function unwrapSingleQuery(queryObject) {\n  var queryNames = Object.keys(queryObject);\n\n  if (queryNames.length === 1 && queryNames[0] === \"__DEFAULT__\") {\n    return queryObject.__DEFAULT__;\n  }\n\n  return queryObject;\n};\n\nvar useMedia = function useMedia(_ref2) {\n  var query = _ref2.query,\n      queries = _ref2.queries,\n      defaultMatches = _ref2.defaultMatches,\n      targetWindow = _ref2.targetWindow,\n      onChange = _ref2.onChange;\n  checkInvariants({\n    query: query,\n    queries: queries,\n    defaultMatches: defaultMatches\n  });\n  var activeQueries = useRef([]);\n\n  var getMatches = function getMatches() {\n    var result = activeQueries.current.reduce(function (acc, _ref3) {\n      var _extends2;\n\n      var name = _ref3.name,\n          mqListener = _ref3.mqListener;\n      return _extends({}, acc, (_extends2 = {}, _extends2[name] = mqListener.matches, _extends2));\n    }, {}); // return result;\n\n    return unwrapSingleQuery(result);\n  };\n\n  var updateMatches = function updateMatches() {\n    setMatches(getMatches());\n  };\n\n  var setUpMQLs = function setUpMQLs() {\n    var activeTargetWindow = targetWindow || window;\n    !(typeof activeTargetWindow.matchMedia === \"function\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media targetWindow> does not support `matchMedia`.\") : invariant(false) : void 0;\n    var queryObject = queries || wrapInQueryObject(query);\n    activeQueries.current = Object.keys(queryObject).map(function (name) {\n      var currentQuery = queryObject[name];\n      var qs = typeof currentQuery !== \"string\" ? json2mq(currentQuery) : currentQuery;\n      var mqListener = new MediaQueryListener(activeTargetWindow, qs, updateMatches);\n      return {\n        name: name,\n        mqListener: mqListener\n      };\n    });\n  };\n\n  var _useState = useState(function () {\n    // If props.defaultMatches has been set, ensure we trigger a two-pass render.\n    // This is useful for SSR with mismatching defaultMatches vs actual matches from window.matchMedia\n    // Details: https://github.com/ReactTraining/react-media/issues/81\n    // TODO: figure out whether this is still technically a two-pass render.\n    if (typeof window !== \"object\") {\n      // In case we're rendering on the server, apply the default matches\n      if (defaultMatches !== undefined) {\n        return defaultMatches;\n      }\n\n      if (query) {\n        return true;\n      }\n      /* if (props.queries) */\n\n\n      return Object.keys(queries).reduce(function (acc, key) {\n        var _extends3;\n\n        return _extends({}, acc, (_extends3 = {}, _extends3[key] = true, _extends3));\n      }, {});\n    } // Else we'll use the state from the MQLs that were just set up.\n\n\n    setUpMQLs();\n    return getMatches();\n  }),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect( // Because setup happens in the state constructor, cleanup is the only thing that\n  // useEffect is responsible for.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function () {\n    return function () {\n      return activeQueries.current.forEach(function (_ref4) {\n        var mqListener = _ref4.mqListener;\n        return mqListener.cancel();\n      });\n    };\n  }, []);\n  useEffect( // Set up a separate listener for onChange since we ideally want to fire onChange\n  // after flushes, rather than having to insert it synchronously before an update happens.\n  function () {\n    if (onChange) {\n      onChange(matches);\n    }\n  }, [matches, onChange]);\n  return matches;\n};\n/**\n * Conditionally renders based on whether or not a media query matches.\n */\n\n\nvar Media = function Media(_ref5) {\n  var defaultMatches = _ref5.defaultMatches,\n      query = _ref5.query,\n      queries = _ref5.queries,\n      render = _ref5.render,\n      children = _ref5.children,\n      targetWindow = _ref5.targetWindow,\n      onChange = _ref5.onChange;\n  var matches = useMedia({\n    query: query,\n    queries: queries,\n    defaultMatches: defaultMatches,\n    targetWindow: targetWindow,\n    onChange: onChange\n  }); // render\n\n  var isAnyMatches = typeof matches === \"object\" ? Object.keys(matches).some(function (key) {\n    return matches[key];\n  }) : matches;\n  return render ? isAnyMatches ? render(matches) : null : children ? typeof children === \"function\" ? children(matches) : !Array.isArray(children) || children.length ? // Preact defaults to empty children array\n  isAnyMatches // We have to check whether child is a composite component or not to decide should we\n  // provide `matches` as a prop or not\n  ? React.Children.only(children) && typeof React.Children.only(children).type === \"string\" ? React.Children.only(children) :\n  /*#__PURE__*/\n  React.cloneElement(React.Children.only(children), {\n    matches: matches\n  }) : null : null : null;\n};\n\nvar queryType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.object.isRequired)]);\nMedia.propTypes = {\n  defaultMatches: PropTypes.oneOfType([PropTypes.bool, PropTypes.objectOf(PropTypes.bool)]),\n  query: queryType,\n  queries: PropTypes.objectOf(queryType),\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  targetWindow: PropTypes.object,\n  onChange: PropTypes.func\n};\nexport default Media;\nexport { useMedia };","map":{"version":3,"sources":["/Users/philiptam/Projects/JSA/node_modules/react-media/esm/react-media.js"],"names":["_extends","React","useRef","useState","useEffect","PropTypes","invariant","json2mq","MediaQueryListener","targetWindow","query","listener","_this","nativeMediaQueryList","matchMedia","active","cancellableListener","matches","apply","arguments","addListener","_proto","prototype","cancel","removeListener","checkInvariants","_ref","queries","defaultMatches","process","env","NODE_ENV","undefined","wrapInQueryObject","__DEFAULT__","unwrapSingleQuery","queryObject","queryNames","Object","keys","length","useMedia","_ref2","onChange","activeQueries","getMatches","result","current","reduce","acc","_ref3","_extends2","name","mqListener","updateMatches","setMatches","setUpMQLs","activeTargetWindow","window","map","currentQuery","qs","_useState","key","_extends3","forEach","_ref4","Media","_ref5","render","children","isAnyMatches","some","Array","isArray","Children","only","type","cloneElement","queryType","oneOfType","string","object","arrayOf","isRequired","propTypes","bool","objectOf","func","node"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport json2mq from 'json2mq';\n\nvar MediaQueryListener = /*#__PURE__*/function () {\n  function MediaQueryListener(targetWindow, query, listener) {\n    var _this = this;\n\n    this.nativeMediaQueryList = targetWindow.matchMedia(query);\n    this.active = true; // Safari doesn't clear up listener with removeListener\n    // when the listener is already waiting in the event queue.\n    // Having an active flag to make sure the listener is not called\n    // after we removeListener.\n\n    this.cancellableListener = function () {\n      _this.matches = _this.nativeMediaQueryList.matches;\n\n      if (_this.active) {\n        listener.apply(void 0, arguments);\n      }\n    };\n\n    this.nativeMediaQueryList.addListener(this.cancellableListener);\n    this.matches = this.nativeMediaQueryList.matches;\n  }\n\n  var _proto = MediaQueryListener.prototype;\n\n  _proto.cancel = function cancel() {\n    this.active = false;\n    this.nativeMediaQueryList.removeListener(this.cancellableListener);\n  };\n\n  return MediaQueryListener;\n}();\n\nvar checkInvariants = function checkInvariants(_ref) {\n  var query = _ref.query,\n      queries = _ref.queries,\n      defaultMatches = _ref.defaultMatches;\n  !(!(!query && !queries) || query && queries) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '<Media> must be supplied with either \"query\" or \"queries\"') : invariant(false) : void 0;\n  !(defaultMatches === undefined || !query || typeof defaultMatches === \"boolean\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when query is set, defaultMatches must be a boolean, received \" + typeof defaultMatches) : invariant(false) : void 0;\n  !(defaultMatches === undefined || !queries || typeof defaultMatches === \"object\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when queries is set, defaultMatches must be a object of booleans, received \" + typeof defaultMatches) : invariant(false) : void 0;\n};\n/**\n * Wraps a single query in an object. This is used to provide backward compatibility with\n * the old `query` prop (as opposed to `queries`). If only a single query is passed, the object\n * will be unpacked down the line, but this allows our internals to assume an object of queries\n * at all times.\n */\n\n\nvar wrapInQueryObject = function wrapInQueryObject(query) {\n  return {\n    __DEFAULT__: query\n  };\n};\n/**\n * Unwraps an object of queries, if it was originally passed as a single query.\n */\n\n\nvar unwrapSingleQuery = function unwrapSingleQuery(queryObject) {\n  var queryNames = Object.keys(queryObject);\n\n  if (queryNames.length === 1 && queryNames[0] === \"__DEFAULT__\") {\n    return queryObject.__DEFAULT__;\n  }\n\n  return queryObject;\n};\n\nvar useMedia = function useMedia(_ref2) {\n  var query = _ref2.query,\n      queries = _ref2.queries,\n      defaultMatches = _ref2.defaultMatches,\n      targetWindow = _ref2.targetWindow,\n      onChange = _ref2.onChange;\n  checkInvariants({\n    query: query,\n    queries: queries,\n    defaultMatches: defaultMatches\n  });\n  var activeQueries = useRef([]);\n\n  var getMatches = function getMatches() {\n    var result = activeQueries.current.reduce(function (acc, _ref3) {\n      var _extends2;\n\n      var name = _ref3.name,\n          mqListener = _ref3.mqListener;\n      return _extends({}, acc, (_extends2 = {}, _extends2[name] = mqListener.matches, _extends2));\n    }, {}); // return result;\n\n    return unwrapSingleQuery(result);\n  };\n\n  var updateMatches = function updateMatches() {\n    setMatches(getMatches());\n  };\n\n  var setUpMQLs = function setUpMQLs() {\n    var activeTargetWindow = targetWindow || window;\n    !(typeof activeTargetWindow.matchMedia === \"function\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media targetWindow> does not support `matchMedia`.\") : invariant(false) : void 0;\n    var queryObject = queries || wrapInQueryObject(query);\n    activeQueries.current = Object.keys(queryObject).map(function (name) {\n      var currentQuery = queryObject[name];\n      var qs = typeof currentQuery !== \"string\" ? json2mq(currentQuery) : currentQuery;\n      var mqListener = new MediaQueryListener(activeTargetWindow, qs, updateMatches);\n      return {\n        name: name,\n        mqListener: mqListener\n      };\n    });\n  };\n\n  var _useState = useState(function () {\n    // If props.defaultMatches has been set, ensure we trigger a two-pass render.\n    // This is useful for SSR with mismatching defaultMatches vs actual matches from window.matchMedia\n    // Details: https://github.com/ReactTraining/react-media/issues/81\n    // TODO: figure out whether this is still technically a two-pass render.\n    if (typeof window !== \"object\") {\n      // In case we're rendering on the server, apply the default matches\n      if (defaultMatches !== undefined) {\n        return defaultMatches;\n      }\n\n      if (query) {\n        return true;\n      }\n      /* if (props.queries) */\n\n\n      return Object.keys(queries).reduce(function (acc, key) {\n        var _extends3;\n\n        return _extends({}, acc, (_extends3 = {}, _extends3[key] = true, _extends3));\n      }, {});\n    } // Else we'll use the state from the MQLs that were just set up.\n\n\n    setUpMQLs();\n    return getMatches();\n  }),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect( // Because setup happens in the state constructor, cleanup is the only thing that\n  // useEffect is responsible for.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function () {\n    return function () {\n      return activeQueries.current.forEach(function (_ref4) {\n        var mqListener = _ref4.mqListener;\n        return mqListener.cancel();\n      });\n    };\n  }, []);\n  useEffect( // Set up a separate listener for onChange since we ideally want to fire onChange\n  // after flushes, rather than having to insert it synchronously before an update happens.\n  function () {\n    if (onChange) {\n      onChange(matches);\n    }\n  }, [matches, onChange]);\n  return matches;\n};\n/**\n * Conditionally renders based on whether or not a media query matches.\n */\n\nvar Media = function Media(_ref5) {\n  var defaultMatches = _ref5.defaultMatches,\n      query = _ref5.query,\n      queries = _ref5.queries,\n      render = _ref5.render,\n      children = _ref5.children,\n      targetWindow = _ref5.targetWindow,\n      onChange = _ref5.onChange;\n  var matches = useMedia({\n    query: query,\n    queries: queries,\n    defaultMatches: defaultMatches,\n    targetWindow: targetWindow,\n    onChange: onChange\n  }); // render\n\n  var isAnyMatches = typeof matches === \"object\" ? Object.keys(matches).some(function (key) {\n    return matches[key];\n  }) : matches;\n  return render ? isAnyMatches ? render(matches) : null : children ? typeof children === \"function\" ? children(matches) : !Array.isArray(children) || children.length ? // Preact defaults to empty children array\n  isAnyMatches // We have to check whether child is a composite component or not to decide should we\n  // provide `matches` as a prop or not\n  ? React.Children.only(children) && typeof React.Children.only(children).type === \"string\" ? React.Children.only(children) : /*#__PURE__*/React.cloneElement(React.Children.only(children), {\n    matches: matches\n  }) : null : null : null;\n};\n\nvar queryType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.object.isRequired)]);\nMedia.propTypes = {\n  defaultMatches: PropTypes.oneOfType([PropTypes.bool, PropTypes.objectOf(PropTypes.bool)]),\n  query: queryType,\n  queries: PropTypes.objectOf(queryType),\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  targetWindow: PropTypes.object,\n  onChange: PropTypes.func\n};\n\nexport default Media;\nexport { useMedia };\n"]},"metadata":{},"sourceType":"module"}