{"ast":null,"code":"var _jsxFileName = \"/Users/philiptam/Projects/JSA/frontend/src/components/app/body/events/Events.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport events from \"../../../../assets/events/events.js\";\nimport \"./events.scss\";\nconst useStyles = makeStyles(theme => ({\n  divider: {\n    // Theme Color, or use css color in quote\n    backgroundColor: \"red\",\n    height: 1,\n    width: \"80vw\"\n  }\n}));\nexport default function Events() {\n  const classes = useStyles();\n\n  const createEvent = (title, description, image, link) => {\n    return React.createElement(Fade, {\n      in: true,\n      timeout: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Card, {\n      raised: \"true\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: \"events-image\",\n      image: process.env.PUBLIC_URL + image,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, title), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, description))))));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Slide, {\n    direction: \"left\",\n    timeout: 300,\n    in: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Upcoming Events\")), React.createElement(Slide, {\n    direction: \"left\",\n    timeout: 500,\n    in: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, events.upcoming.map((event, index) => createEvent(event.Title, event.Description, event.Image, event.Facebook)))), React.createElement(Slide, {\n    direction: \"left\",\n    timeout: 300,\n    in: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Past Events\")), React.createElement(Slide, {\n    direction: \"left\",\n    timeout: 500,\n    in: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, events.past.map((event, index) => createEvent(event.Title, event.Description, event.Image, event.Facebook)))));\n}\nEvents.propTypes = {\n  classes: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/philiptam/Projects/JSA/frontend/src/components/app/body/events/Events.jsx"],"names":["React","useState","PropTypes","makeStyles","Grid","Card","CardContent","CardMedia","Box","Typography","Slide","Fade","events","useStyles","theme","divider","backgroundColor","height","width","Events","classes","createEvent","title","description","image","link","process","env","PUBLIC_URL","upcoming","map","event","index","Title","Description","Image","Facebook","past","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport events from \"../../../../assets/events/events.js\"\n\nimport \"./events.scss\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    divider: {\n        // Theme Color, or use css color in quote\n        backgroundColor: \"red\",\n        height: 1,\n        width: \"80vw\"\n    },\n}));\n\nexport default function Events() {\n    const classes = useStyles();\n\n    const createEvent = (title, description, image, link) => {\n        return (\n            <Fade in={true} timeout={1000}>\n            <Grid item>\n                <Card raised=\"true\" className=\"\">\n                <CardMedia\n                    className=\"events-image\"\n                    image={process.env.PUBLIC_URL + image}\n                    title={title}\n                />\n                <div className=\"\">\n                    <CardContent className=\"\">\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {description}\n                    </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n            </Grid>\n            </Fade>\n        )\n    }\n\n    return (\n     \n        \n            <div className=\"events\">\n                <Slide direction=\"left\" timeout={300} in={true}  >\n                    <h2>\n                        Upcoming Events\n                    </h2>\n                </Slide> \n                <Slide direction=\"left\" timeout={500} in={true} >\n                    <Grid container justify=\"center\"  direction=\"row\" spacing=\"4\">\n                        {events.upcoming.map((event, index) => (\n                            createEvent(event.Title, event.Description, event.Image, event.Facebook)\n                        ))}\n                    </Grid>\n                </Slide>\n                <Slide direction=\"left\" timeout={300} in={true}  >\n                    <h2>\n                        Past Events\n                    </h2>\n                </Slide>\n                <Slide direction=\"left\" timeout={500} in={true} >\n                <Grid container justify=\"center\" direction=\"row\" spacing=\"4\">\n                    {events.past.map((event, index) => (\n                            createEvent(event.Title, event.Description, event.Image, event.Facebook)\n                        ))}\n                    </Grid>\n                </Slide>\n            </div>\n        \n    );\n}\n\nEvents.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n"]},"metadata":{},"sourceType":"module"}