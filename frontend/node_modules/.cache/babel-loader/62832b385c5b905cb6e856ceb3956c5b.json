{"ast":null,"code":"import _slicedToArray from \"/Users/philiptam/Projects/JSA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/philiptam/Projects/JSA/src/components/app/body/events/Events.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport events from \"../../../../assets/events/events.js\";\nimport \"./events.scss\";\nexport default function Events() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        bitch = _useState2[0],\n        setBitch = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dumb = _useState4[0],\n        setDumb = _useState4[1];\n\n  setTimeout(() => setBitch(true), 500);\n\n  const createEvent = (title, description, image, link) => {\n    return React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Card, {\n      raised: \"true\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: \"events-image\",\n      image: process.env.PUBLIC_URL + image,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, title), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, description)))));\n  };\n\n  return React.createElement(Fade, {\n    in: bitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Slide, {\n    direction: \"up\",\n    in: checked,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Upcoming Events\"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, events.upcoming.map((event, index) => createEvent(event.Title, event.Description, event.Image, event.Facebook))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Past Events\"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, events.past.map((event, index) => createEvent(event.Title, event.Description, event.Image, event.Facebook))))));\n}\nEvents.propTypes = {\n  classes: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/philiptam/Projects/JSA/src/components/app/body/events/Events.jsx"],"names":["React","useState","PropTypes","Grid","Card","CardContent","CardMedia","Box","Typography","Slide","Fade","events","Events","bitch","setBitch","dumb","setDumb","setTimeout","createEvent","title","description","image","link","process","env","PUBLIC_URL","checked","upcoming","map","event","index","Title","Description","Image","Facebook","past","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport events from \"../../../../assets/events/events.js\"\n\nimport \"./events.scss\"\n\nexport default function Events() {\n\n    const [bitch, setBitch] = useState(false);\n    const [dumb, setDumb] = useState(false);\n    \n    setTimeout(() => setBitch(true),500);\n\n\n    const createEvent = (title, description, image, link) => {\n        return (\n            <Grid item>\n                <Card raised=\"true\" className=\"\">\n                <CardMedia\n                    className=\"events-image\"\n                    image={process.env.PUBLIC_URL + image}\n                    title={title}\n                />\n                <div className=\"\">\n                    <CardContent className=\"\">\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {description}\n                    </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n            </Grid>\n        )\n    }\n\n    return (\n        <Fade in={bitch}>\n            <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n            <div className=\"events\">\n                <h2>\n                    Upcoming Events\n                </h2>\n                <Grid container justify=\"center\"  direction=\"row\" spacing=\"4\">\n                    {events.upcoming.map((event, index) => (\n                        createEvent(event.Title, event.Description, event.Image, event.Facebook)\n                    ))}\n                </Grid>\n                <h2>\n                    Past Events\n                </h2>\n                <Grid container justify=\"center\" direction=\"row\" spacing=\"4\">\n                {events.past.map((event, index) => (\n                        createEvent(event.Title, event.Description, event.Image, event.Facebook)\n                    ))}\n                </Grid>\n            </div>\n            </Slide>\n        </Fade>\n    );\n}\n\nEvents.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n"]},"metadata":{},"sourceType":"module"}