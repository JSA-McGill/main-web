{"ast":null,"code":"import _slicedToArray from \"/Users/philiptam/Projects/JSA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/philiptam/Projects/JSA/frontend/src/components/app/body/about/exec/Exec.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport './exec.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.main\n  },\n  media: {\n    height: 300\n  }\n}));\nexport default function Exec(props) {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        focused = _useState2[0],\n        setFocused = _useState2[1];\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    sm: 6,\n    md: 4,\n    lg: 2,\n    xl: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    onClick: () => setFocused(!focused),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, !focused && React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.Image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    display: \"inline\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.FirstName + \" \"), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    display: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.LastName), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.Title), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h3\",\n    style: {\n      fontStyle: \"italic\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.Program), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.Description)))));\n}\n;","map":{"version":3,"sources":["/Users/philiptam/Projects/JSA/frontend/src/components/app/body/about/exec/Exec.jsx"],"names":["React","useState","PropTypes","makeStyles","ThemeProvider","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","Link","useStyles","theme","root","color","palette","secondary","main","backgroundColor","primary","media","height","Exec","props","classes","focused","setFocused","Image","fontWeight","FirstName","LastName","Title","fontStyle","Program","Description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport './exec.scss';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.main\n    },\n    media: {\n      height: 300,\n    },\n  }));\n  \n\nexport default function Exec(props) {\n    const classes = useStyles();\n\n    const [focused, setFocused] = useState(false);\n\n    return (\n        <Grid item xs={8} sm={6} md={4} lg={2} xl={2}>\n            <Card className={classes.root} variant=\"outlined\" >\n                <CardActionArea onClick={() => setFocused(!focused)}>\n                    { \n                    !focused &&\n                        <CardMedia\n                        className={classes.media}\n                        image={props.Image}\n                        />\n                    }\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" display=\"inline\" style={{fontWeight:\"bold\"}}>\n                            {props.FirstName+\" \"}  \n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" display=\"inline\">\n                            {props.LastName}\n                        </Typography>\n\n                        <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                            {props.Title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h3\" style={{fontStyle:\"italic\"}}>\n                            {props.Program}\n                        </Typography>\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.Description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    );\n};"]},"metadata":{},"sourceType":"module"}